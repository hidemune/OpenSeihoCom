/*
 * Copyright (C) 2014 hdm
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package openseiho;

import java.awt.Color;
import java.awt.Dimension;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import openseiho.OsClassYMD;

/**
 *
 * @author TANAKA Hidemune <auau@kne.biglobe.ne.jp>
 */
public class OsTextYmd extends javax.swing.JPanel {
private PropertyChangeSupport pcs = new PropertyChangeSupport(this);

    /**
     * Creates new form textYmdPanel
     * FocusTraversalPolicyは、「なし」にしておく必要あり（タブ移動ができなくなるため）
     */
    public OsTextYmd() {
        initComponents();
        txtYMD.enableInputMethods(false);
        ID.setPreferredSize(new Dimension(80, 27));
    }

    public void setTextYmdErr(boolean error) {
        if (error) {
            txtYMD.setBackground(Color.red);
        } else {
            txtYMD.setBackground(Color.white);
        }
    }
    public void setEditable(boolean editable) {
        txtYMD.setEditable(editable);
    }
    public void setCaption(String str) {
        this.Caption.setText(str);
    }
    
    public void setTextYMD(String str) {
        //pcs.firePropertyChange("textYMD", this.getTextYMD(), str);
        this.txtYMD.setText(str);
    }
    
    public String getTextYMD() {
        return this.txtYMD.getText();
    }
    
    public void setID(String str) {
        String pre = this.getID();
        if (isDate(str)) {
            this.ID.setText(str);
            pcs.firePropertyChange("ID", pre, str);
        } else {
            this.ID.setText("00000000");
            this.txtYMD.setText("");
            pcs.firePropertyChange("ID", pre, "00000000");
            return;
        }
        txtYMD.setText(OsClassYMD.YmdIdToStr(str));
    }
    public String getID() {
        return this.ID.getText();
    }
    public boolean isDate() {
        return isDate(ID.getText());
    }
    public static boolean isDate(String strYmdID) {
        long ymd = 0;
        try {
            ymd = Long.parseLong(strYmdID);
        } catch (Exception e) {
            return false;
        }
        if (ymd <= 18000101) {
            return false;
        }
        if (ymd >= 99999999) {
            return false;
        }
        return true;
    }
    //イベント関連
@Override
    public void addPropertyChangeListener(PropertyChangeListener listener) {
        try {
            pcs.addPropertyChangeListener(listener);
        } catch (Exception e) {
            //何もしない
            //e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        Caption = new javax.swing.JLabel();
        jSplitPane2 = new javax.swing.JSplitPane();
        ID = new javax.swing.JTextField();
        txtYMD = new javax.swing.JTextField();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerSize(1);

        Caption.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        Caption.setText("Caption");
        Caption.setFocusable(false);
        Caption.setName("Caption"); // NOI18N
        Caption.setPreferredSize(new java.awt.Dimension(50, 23));
        jSplitPane1.setLeftComponent(Caption);

        jSplitPane2.setBorder(null);
        jSplitPane2.setDividerLocation(150);
        jSplitPane2.setDividerSize(1);

        ID.setEditable(false);
        ID.setText("yyyymmdd");
        ID.setFocusTraversalPolicyProvider(true);
        ID.setFocusable(false);
        ID.setName("ID"); // NOI18N
        ID.setPreferredSize(new java.awt.Dimension(100, 17));
        jSplitPane2.setRightComponent(ID);

        txtYMD.setMinimumSize(new java.awt.Dimension(120, 17));
        txtYMD.setPreferredSize(new java.awt.Dimension(150, 17));
        txtYMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYMDActionPerformed(evt);
            }
        });
        jSplitPane2.setLeftComponent(txtYMD);

        jSplitPane1.setRightComponent(jSplitPane2);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void txtYMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYMDActionPerformed
        // TODO add your handling code here:
        //YMD変換
        String str = this.txtYMD.getText();
        String ID = OsClassYMD.StrToYmdId(str);
        //プロパティを直接変更
        setID(ID);
        
        //if (isDate()) {
        //    //日本語日付表示
        //    this.setTextYMD(classYMD.YmdIdToStr(ID));
        //}
    }//GEN-LAST:event_txtYMDActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Caption;
    private javax.swing.JTextField ID;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextField txtYMD;
    // End of variables declaration//GEN-END:variables
}
